

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 03 23:11:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  000C78                     __pidataCOMRAM:
    57                           	opt callstack 0
    58                           
    59                           ;initializer for IniciaLCD@F3175
    60  000C78  33                 	db	51
    61  000C79  32                 	db	50
    62  000C7A  28                 	db	40
    63  000C7B  0C                 	db	12
    64  000C7C  06                 	db	6
    65  000C7D  01                 	db	1
    66                           
    67                           ;initializer for _Estado
    68  000C7E  01                 	db	1
    69  0000                     _PORTCbits	set	3970
    70  0000                     _PORTDbits	set	3971
    71  0000                     _PORTD	set	3971
    72  0000                     _UCFGbits	set	3951
    73  0000                     _UCON	set	3949
    74  0000                     _TRISCbits	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISD	set	3989
    77  0000                     _PORTBbits	set	3969
    78  0000                     _PORTB	set	3969
    79                           
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	opt callstack 0
    83  000800  00                 	db	0
    84  000801                     STR_2:
    85  000801  45                 	db	69	;'E'
    86  000802  73                 	db	115	;'s'
    87  000803  74                 	db	116	;'t'
    88  000804  61                 	db	97	;'a'
    89  000805  64                 	db	100	;'d'
    90  000806  6F                 	db	111	;'o'
    91  000807  3A                 	db	58	;':'
    92  000808  20                 	db	32
    93  000809  20                 	db	32
    94  00080A  20                 	db	32
    95  00080B  20                 	db	32
    96  00080C  20                 	db	32
    97  00080D  20                 	db	32
    98  00080E  20                 	db	32
    99  00080F  20                 	db	32
   100  000810  20                 	db	32
   101  000811  00                 	db	0
   102  000812                     STR_1:
   103  000812  20                 	db	32
   104  000813  20                 	db	32
   105  000814  20                 	db	32
   106  000815  53                 	db	83	;'S'
   107  000816  45                 	db	69	;'E'
   108  000817  4E                 	db	78	;'N'
   109  000818  41                 	db	65	;'A'
   110  000819  49                 	db	73	;'I'
   111  00081A  20                 	db	32
   112  00081B  20                 	db	32
   113  00081C  31                 	db	49	;'1'
   114  00081D  31                 	db	49	;'1'
   115  00081E  38                 	db	56	;'8'
   116  00081F  20                 	db	32
   117  000820  20                 	db	32
   118  000821  20                 	db	32
   119  000822  00                 	db	0
   120                           
   121                           ; #config settings
   122  000823  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           	psect	cinit
   125  000C4E                     __pcinit:
   126                           	opt callstack 0
   127  000C4E                     start_initialization:
   128                           	opt callstack 0
   129  000C4E                     __initialization:
   130                           	opt callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (7 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134  000C4E  0E78               	movlw	low __pidataCOMRAM
   135  000C50  6EF6               	movwf	tblptrl,c
   136  000C52  0E0C               	movlw	high __pidataCOMRAM
   137  000C54  6EF7               	movwf	tblptrh,c
   138  000C56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139  000C58  6EF8               	movwf	tblptru,c
   140  000C5A  EE00  F00E         	lfsr	0,__pdataCOMRAM
   141  000C5E  EE10 F007          	lfsr	1,7
   142  000C62                     copy_data0:
   143  000C62  0009               	tblrd		*+
   144  000C64  CFF5 FFEE          	movff	tablat,postinc0
   145  000C68  50E5               	movf	postdec1,w,c
   146  000C6A  50E1               	movf	fsr1l,w,c
   147  000C6C  E1FA               	bnz	copy_data0
   148  000C6E                     end_of_initialization:
   149                           	opt callstack 0
   150  000C6E                     __end_of__initialization:
   151                           	opt callstack 0
   152  000C6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153  000C70  6EF8               	movwf	tblptru,c
   154  000C72  0100               	movlb	0
   155  000C74  EF12  F004         	goto	_main	;jump to C main() function
   156                           
   157                           	psect	dataCOMRAM
   158  00000E                     __pdataCOMRAM:
   159                           	opt callstack 0
   160  00000E                     IniciaLCD@F3175:
   161                           	opt callstack 0
   162  00000E                     	ds	6
   163  000014                     _Estado:
   164                           	opt callstack 0
   165  000014                     	ds	1
   166                           
   167                           	psect	cstackCOMRAM
   168  000001                     __pcstackCOMRAM:
   169                           	opt callstack 0
   170  000001                     ??_ComandoLCD:
   171  000001                     ??_EscreveLCD:
   172  000001                     ?___awmod:
   173                           	opt callstack 0
   174  000001                     ___awmod@dividend:
   175                           	opt callstack 0
   176                           
   177                           ; 2 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     ComandoLCD@i:
   180                           	opt callstack 0
   181  000002                     EscreveLCD@dado:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0x1
   185  000002                     	ds	1
   186  000003                     ComandoLCD@dado:
   187                           	opt callstack 0
   188  000003                     EscreveLCD@i:
   189                           	opt callstack 0
   190  000003                     ___awmod@divisor:
   191                           	opt callstack 0
   192                           
   193                           ; 2 bytes @ 0x2
   194  000003                     	ds	1
   195  000004                     ??_IniciaLCD:
   196  000004                     PosicionaLCD@coluna:
   197                           	opt callstack 0
   198  000004                     StringLCD@string:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0x3
   202  000004                     	ds	1
   203  000005                     ??_PosicionaLCD:
   204  000005                     ___awmod@counter:
   205                           	opt callstack 0
   206  000005                     IniciaLCD@inicio:
   207                           	opt callstack 0
   208                           
   209                           ; 6 bytes @ 0x4
   210  000005                     	ds	1
   211  000006                     ___awmod@sign:
   212                           	opt callstack 0
   213                           
   214                           ; 1 bytes @ 0x5
   215  000006                     	ds	1
   216  000007                     PosicionaLCD@linha:
   217                           	opt callstack 0
   218                           
   219                           ; 1 bytes @ 0x6
   220  000007                     	ds	1
   221  000008                     PosicionaLCD@posicao:
   222                           	opt callstack 0
   223                           
   224                           ; 1 bytes @ 0x7
   225  000008                     	ds	3
   226  00000B                     IniciaLCD@i:
   227                           	opt callstack 0
   228                           
   229                           ; 1 bytes @ 0xA
   230  00000B                     	ds	1
   231  00000C                     ??_main:
   232                           
   233                           ; 1 bytes @ 0xB
   234  00000C                     	ds	2
   235                           
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 70 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         0       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          2       0       0       0       0       0       0       0       0
   258 ;;      Totals:         2       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        2 bytes
   260 ;; Hardware stack levels required when called:    2
   261 ;; This function calls:
   262 ;;		_EscreveLCD
   263 ;;		_IniciaLCD
   264 ;;		_PosicionaLCD
   265 ;;		_StringLCD
   266 ;;		___awmod
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273  000824                     __ptext0:
   274                           	opt callstack 0
   275  000824                     _main:
   276                           	opt callstack 29
   277  000824                     
   278                           ;main.c: 74:  TRISD = 0x00;
   279  000824  0E00               	movlw	0
   280  000826  6E95               	movwf	149,c	;volatile
   281                           
   282                           ;main.c: 75:     TRISB = 0b00000011;
   283  000828  0E03               	movlw	3
   284  00082A  6E93               	movwf	147,c	;volatile
   285  00082C                     
   286                           ;main.c: 76:     TRISCbits.TRISC2 = 1;
   287  00082C  8494               	bsf	148,2,c	;volatile
   288                           
   289                           ;main.c: 79:     UCON = 0x00;
   290  00082E  0E00               	movlw	0
   291  000830  6E6D               	movwf	109,c	;volatile
   292  000832                     
   293                           ;main.c: 80:     UCFGbits.UTRDIS = 1;
   294  000832  866F               	bsf	111,3,c	;volatile
   295  000834                     
   296                           ;main.c: 82:  IniciaLCD();
   297  000834  ECE2  F005         	call	_IniciaLCD	;wreg free
   298  000838                     
   299                           ;main.c: 84:     PORTD = 0x0f;
   300  000838  0E0F               	movlw	15
   301  00083A  6E83               	movwf	131,c	;volatile
   302  00083C                     
   303                           ;main.c: 90:  PosicionaLCD(1,1);
   304  00083C  0E01               	movlw	1
   305  00083E  6E04               	movwf	PosicionaLCD@coluna^0,c
   306  000840  0E01               	movlw	1
   307  000842  EC7A  F005         	call	_PosicionaLCD
   308  000846                     
   309                           ;main.c: 91:     StringLCD("   SENAI  118   ");
   310  000846  0E12               	movlw	low STR_1
   311  000848  6E04               	movwf	StringLCD@string^0,c
   312  00084A  0E08               	movlw	high STR_1
   313  00084C  6E05               	movwf	(StringLCD@string+1)^0,c
   314  00084E  EC0C  F006         	call	_StringLCD	;wreg free
   315  000852                     
   316                           ;main.c: 92:     PosicionaLCD(2,1);
   317  000852  0E01               	movlw	1
   318  000854  6E04               	movwf	PosicionaLCD@coluna^0,c
   319  000856  0E02               	movlw	2
   320  000858  EC7A  F005         	call	_PosicionaLCD
   321  00085C                     
   322                           ;main.c: 93:     StringLCD("Estado:         ");
   323  00085C  0E01               	movlw	low STR_2
   324  00085E  6E04               	movwf	StringLCD@string^0,c
   325  000860  0E08               	movlw	high STR_2
   326  000862  6E05               	movwf	(StringLCD@string+1)^0,c
   327  000864  EC0C  F006         	call	_StringLCD	;wreg free
   328  000868  EFBA  F004         	goto	l1104
   329  00086C                     l83:
   330                           
   331                           ;main.c: 102:                 PORTDbits.RD0 = 1;
   332  00086C  8083               	bsf	131,0,c	;volatile
   333                           
   334                           ;main.c: 103:                 PORTDbits.RD1 = 0;
   335  00086E  9283               	bcf	131,1,c	;volatile
   336                           
   337                           ;main.c: 104:                 PORTDbits.RD2 = 0;
   338  000870  9483               	bcf	131,2,c	;volatile
   339                           
   340                           ;main.c: 105:                 PORTDbits.RD3 = 0;
   341  000872  9683               	bcf	131,3,c	;volatile
   342  000874                     
   343                           ;main.c: 106:                 PosicionaLCD(2,9);
   344  000874  0E09               	movlw	9
   345  000876  6E04               	movwf	PosicionaLCD@coluna^0,c
   346  000878  0E02               	movlw	2
   347  00087A  EC7A  F005         	call	_PosicionaLCD
   348                           
   349                           ;main.c: 107:                 EscreveLCD(Estado%10 + 48);
   350  00087E  C014  F001         	movff	_Estado,___awmod@dividend
   351  000882  6A02               	clrf	(___awmod@dividend+1)^0,c
   352  000884  0E00               	movlw	0
   353  000886  6E04               	movwf	(___awmod@divisor+1)^0,c
   354  000888  0E0A               	movlw	10
   355  00088A  6E03               	movwf	___awmod@divisor^0,c
   356  00088C  ECD9  F004         	call	___awmod	;wreg free
   357  000890  5001               	movf	?___awmod^0,w,c
   358  000892  0F30               	addlw	48
   359  000894  ECB3  F005         	call	_EscreveLCD
   360  000898                     
   361                           ;main.c: 111:                 if(PORTCbits.RC4 == 1){
   362  000898  A882               	btfss	130,4,c	;volatile
   363  00089A  EF51  F004         	goto	u311
   364  00089E  EF53  F004         	goto	u310
   365  0008A2                     u311:
   366  0008A2  EFBA  F004         	goto	l82
   367  0008A6                     u310:
   368  0008A6                     
   369                           ;main.c: 112:                     Estado = 2;
   370  0008A6  0E02               	movlw	2
   371  0008A8  6E14               	movwf	_Estado^0,c
   372  0008AA  EFBA  F004         	goto	l1104
   373  0008AE                     l86:
   374                           
   375                           ;main.c: 121:                 PORTDbits.RD0 = 0;
   376  0008AE  9083               	bcf	131,0,c	;volatile
   377                           
   378                           ;main.c: 122:                 PORTDbits.RD1 = 1;
   379  0008B0  8283               	bsf	131,1,c	;volatile
   380                           
   381                           ;main.c: 123:                 PORTDbits.RD2 = 0;
   382  0008B2  9483               	bcf	131,2,c	;volatile
   383                           
   384                           ;main.c: 124:                 PORTDbits.RD3 = 0;
   385  0008B4  9683               	bcf	131,3,c	;volatile
   386  0008B6                     
   387                           ;main.c: 125:                 PosicionaLCD(2,9);
   388  0008B6  0E09               	movlw	9
   389  0008B8  6E04               	movwf	PosicionaLCD@coluna^0,c
   390  0008BA  0E02               	movlw	2
   391  0008BC  EC7A  F005         	call	_PosicionaLCD
   392                           
   393                           ;main.c: 126:                 EscreveLCD(Estado%10 + 48);
   394  0008C0  C014  F001         	movff	_Estado,___awmod@dividend
   395  0008C4  6A02               	clrf	(___awmod@dividend+1)^0,c
   396  0008C6  0E00               	movlw	0
   397  0008C8  6E04               	movwf	(___awmod@divisor+1)^0,c
   398  0008CA  0E0A               	movlw	10
   399  0008CC  6E03               	movwf	___awmod@divisor^0,c
   400  0008CE  ECD9  F004         	call	___awmod	;wreg free
   401  0008D2  5001               	movf	?___awmod^0,w,c
   402  0008D4  0F30               	addlw	48
   403  0008D6  ECB3  F005         	call	_EscreveLCD
   404  0008DA                     
   405                           ;main.c: 130:                 if(PORTCbits.RC2 == 1){
   406  0008DA  A482               	btfss	130,2,c	;volatile
   407  0008DC  EF72  F004         	goto	u321
   408  0008E0  EF74  F004         	goto	u320
   409  0008E4                     u321:
   410  0008E4  EFBA  F004         	goto	l82
   411  0008E8                     u320:
   412  0008E8                     
   413                           ;main.c: 131:                     Estado = 3;
   414  0008E8  0E03               	movlw	3
   415  0008EA  6E14               	movwf	_Estado^0,c
   416  0008EC  EFBA  F004         	goto	l1104
   417  0008F0                     l88:
   418                           
   419                           ;main.c: 140:                 PORTDbits.RD0 = 0;
   420  0008F0  9083               	bcf	131,0,c	;volatile
   421                           
   422                           ;main.c: 141:                 PORTDbits.RD1 = 0;
   423  0008F2  9283               	bcf	131,1,c	;volatile
   424                           
   425                           ;main.c: 142:                 PORTDbits.RD2 = 1;
   426  0008F4  8483               	bsf	131,2,c	;volatile
   427                           
   428                           ;main.c: 143:                 PORTDbits.RD3 = 0;
   429  0008F6  9683               	bcf	131,3,c	;volatile
   430  0008F8                     
   431                           ;main.c: 144:                 PosicionaLCD(2,9);
   432  0008F8  0E09               	movlw	9
   433  0008FA  6E04               	movwf	PosicionaLCD@coluna^0,c
   434  0008FC  0E02               	movlw	2
   435  0008FE  EC7A  F005         	call	_PosicionaLCD
   436                           
   437                           ;main.c: 145:                 EscreveLCD(Estado%10 + 48);
   438  000902  C014  F001         	movff	_Estado,___awmod@dividend
   439  000906  6A02               	clrf	(___awmod@dividend+1)^0,c
   440  000908  0E00               	movlw	0
   441  00090A  6E04               	movwf	(___awmod@divisor+1)^0,c
   442  00090C  0E0A               	movlw	10
   443  00090E  6E03               	movwf	___awmod@divisor^0,c
   444  000910  ECD9  F004         	call	___awmod	;wreg free
   445  000914  5001               	movf	?___awmod^0,w,c
   446  000916  0F30               	addlw	48
   447  000918  ECB3  F005         	call	_EscreveLCD
   448  00091C                     
   449                           ;main.c: 149:                 if(PORTBbits.RB0 == 1){
   450  00091C  A081               	btfss	129,0,c	;volatile
   451  00091E  EF93  F004         	goto	u331
   452  000922  EF95  F004         	goto	u330
   453  000926                     u331:
   454  000926  EFBA  F004         	goto	l82
   455  00092A                     u330:
   456  00092A                     
   457                           ;main.c: 150:                     Estado = 4;
   458  00092A  0E04               	movlw	4
   459  00092C  6E14               	movwf	_Estado^0,c
   460  00092E  EFBA  F004         	goto	l1104
   461  000932                     l90:
   462                           
   463                           ;main.c: 159:                 PORTDbits.RD0 = 0;
   464  000932  9083               	bcf	131,0,c	;volatile
   465                           
   466                           ;main.c: 160:                 PORTDbits.RD1 = 0;
   467  000934  9283               	bcf	131,1,c	;volatile
   468                           
   469                           ;main.c: 161:                 PORTDbits.RD2 = 0;
   470  000936  9483               	bcf	131,2,c	;volatile
   471                           
   472                           ;main.c: 162:                 PORTDbits.RD3 = 1;
   473  000938  8683               	bsf	131,3,c	;volatile
   474  00093A                     
   475                           ;main.c: 163:                 PosicionaLCD(2,9);
   476  00093A  0E09               	movlw	9
   477  00093C  6E04               	movwf	PosicionaLCD@coluna^0,c
   478  00093E  0E02               	movlw	2
   479  000940  EC7A  F005         	call	_PosicionaLCD
   480                           
   481                           ;main.c: 164:                 EscreveLCD(Estado%10 + 48);
   482  000944  C014  F001         	movff	_Estado,___awmod@dividend
   483  000948  6A02               	clrf	(___awmod@dividend+1)^0,c
   484  00094A  0E00               	movlw	0
   485  00094C  6E04               	movwf	(___awmod@divisor+1)^0,c
   486  00094E  0E0A               	movlw	10
   487  000950  6E03               	movwf	___awmod@divisor^0,c
   488  000952  ECD9  F004         	call	___awmod	;wreg free
   489  000956  5001               	movf	?___awmod^0,w,c
   490  000958  0F30               	addlw	48
   491  00095A  ECB3  F005         	call	_EscreveLCD
   492  00095E                     
   493                           ;main.c: 168:                 if(PORTBbits.RB1 == 1){
   494  00095E  A281               	btfss	129,1,c	;volatile
   495  000960  EFB4  F004         	goto	u341
   496  000964  EFB6  F004         	goto	u340
   497  000968                     u341:
   498  000968  EFBA  F004         	goto	l82
   499  00096C                     u340:
   500  00096C                     
   501                           ;main.c: 169:                     Estado = 1;
   502  00096C  0E01               	movlw	1
   503  00096E  6E14               	movwf	_Estado^0,c
   504  000970  EFBA  F004         	goto	l1104
   505  000974                     l82:
   506  000974                     l1104:
   507  000974  5014               	movf	_Estado^0,w,c
   508  000976  6E0C               	movwf	??_main^0,c
   509  000978  6A0D               	clrf	(??_main+1)^0,c
   510                           
   511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   512                           ; Switch size 1, requested type "simple"
   513                           ; Number of cases is 1, Range of values is 0 to 0
   514                           ; switch strategies available:
   515                           ; Name         Instructions Cycles
   516                           ; simple_byte            4     3 (average)
   517                           ;	Chosen strategy is simple_byte
   518  00097A  500D               	movf	(??_main+1)^0,w,c
   519  00097C  0A00               	xorlw	0	; case 0
   520  00097E  B4D8               	btfsc	status,2,c
   521  000980  EFC4  F004         	goto	l1118
   522  000984  EFBA  F004         	goto	l1104
   523  000988                     l1118:
   524                           
   525                           ; Switch size 1, requested type "simple"
   526                           ; Number of cases is 4, Range of values is 1 to 4
   527                           ; switch strategies available:
   528                           ; Name         Instructions Cycles
   529                           ; simple_byte           13     7 (average)
   530                           ;	Chosen strategy is simple_byte
   531  000988  500C               	movf	??_main^0,w,c
   532  00098A  0A01               	xorlw	1	; case 1
   533  00098C  B4D8               	btfsc	status,2,c
   534  00098E  EF36  F004         	goto	l83
   535  000992  0A03               	xorlw	3	; case 2
   536  000994  B4D8               	btfsc	status,2,c
   537  000996  EF57  F004         	goto	l86
   538  00099A  0A01               	xorlw	1	; case 3
   539  00099C  B4D8               	btfsc	status,2,c
   540  00099E  EF78  F004         	goto	l88
   541  0009A2  0A07               	xorlw	7	; case 4
   542  0009A4  B4D8               	btfsc	status,2,c
   543  0009A6  EF99  F004         	goto	l90
   544  0009AA  EFBA  F004         	goto	l1104
   545  0009AE  EF00  F000         	goto	start
   546  0009B2                     __end_of_main:
   547                           	opt callstack 0
   548                           
   549 ;; *************** function ___awmod *****************
   550 ;; Defined at:
   551 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  dividend        2    0[COMRAM] int 
   554 ;;  divisor         2    2[COMRAM] int 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  sign            1    5[COMRAM] unsigned char 
   557 ;;  counter         1    4[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  2    0[COMRAM] int 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         4       0       0       0       0       0       0       0       0
   568 ;;      Locals:         2       0       0       0       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0
   570 ;;      Totals:         6       0       0       0       0       0       0       0       0
   571 ;;Total ram usage:        6 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text1
   581  0009B2                     __ptext1:
   582                           	opt callstack 0
   583  0009B2                     ___awmod:
   584                           	opt callstack 30
   585  0009B2  0E00               	movlw	0
   586  0009B4  6E06               	movwf	___awmod@sign^0,c
   587  0009B6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   588  0009B8  EFE2  F004         	goto	u250
   589  0009BC  EFE0  F004         	goto	u251
   590  0009C0                     u251:
   591  0009C0  EFE8  F004         	goto	l1032
   592  0009C4                     u250:
   593  0009C4  6C01               	negf	___awmod@dividend^0,c
   594  0009C6  1E02               	comf	(___awmod@dividend+1)^0,f,c
   595  0009C8  B0D8               	btfsc	status,0,c
   596  0009CA  2A02               	incf	(___awmod@dividend+1)^0,f,c
   597  0009CC  0E01               	movlw	1
   598  0009CE  6E06               	movwf	___awmod@sign^0,c
   599  0009D0                     l1032:
   600  0009D0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   601  0009D2  EFEF  F004         	goto	u260
   602  0009D6  EFED  F004         	goto	u261
   603  0009DA                     u261:
   604  0009DA  EFF3  F004         	goto	l1036
   605  0009DE                     u260:
   606  0009DE  6C03               	negf	___awmod@divisor^0,c
   607  0009E0  1E04               	comf	(___awmod@divisor+1)^0,f,c
   608  0009E2  B0D8               	btfsc	status,0,c
   609  0009E4  2A04               	incf	(___awmod@divisor+1)^0,f,c
   610  0009E6                     l1036:
   611  0009E6  5003               	movf	___awmod@divisor^0,w,c
   612  0009E8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   613  0009EA  B4D8               	btfsc	status,2,c
   614  0009EC  EFFA  F004         	goto	u271
   615  0009F0  EFFC  F004         	goto	u270
   616  0009F4                     u271:
   617  0009F4  EF20  F005         	goto	l1052
   618  0009F8                     u270:
   619  0009F8  0E01               	movlw	1
   620  0009FA  6E05               	movwf	___awmod@counter^0,c
   621  0009FC  EF04  F005         	goto	l1042
   622  000A00                     l1040:
   623  000A00  90D8               	bcf	status,0,c
   624  000A02  3603               	rlcf	___awmod@divisor^0,f,c
   625  000A04  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   626  000A06  2A05               	incf	___awmod@counter^0,f,c
   627  000A08                     l1042:
   628  000A08  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   629  000A0A  EF09  F005         	goto	u281
   630  000A0E  EF0B  F005         	goto	u280
   631  000A12                     u281:
   632  000A12  EF00  F005         	goto	l1040
   633  000A16                     u280:
   634  000A16                     l1044:
   635  000A16  5003               	movf	___awmod@divisor^0,w,c
   636  000A18  5C01               	subwf	___awmod@dividend^0,w,c
   637  000A1A  5004               	movf	(___awmod@divisor+1)^0,w,c
   638  000A1C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   639  000A1E  A0D8               	btfss	status,0,c
   640  000A20  EF14  F005         	goto	u291
   641  000A24  EF16  F005         	goto	u290
   642  000A28                     u291:
   643  000A28  EF1A  F005         	goto	l1048
   644  000A2C                     u290:
   645  000A2C  5003               	movf	___awmod@divisor^0,w,c
   646  000A2E  5E01               	subwf	___awmod@dividend^0,f,c
   647  000A30  5004               	movf	(___awmod@divisor+1)^0,w,c
   648  000A32  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   649  000A34                     l1048:
   650  000A34  90D8               	bcf	status,0,c
   651  000A36  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   652  000A38  3203               	rrcf	___awmod@divisor^0,f,c
   653  000A3A  2E05               	decfsz	___awmod@counter^0,f,c
   654  000A3C  EF0B  F005         	goto	l1044
   655  000A40                     l1052:
   656  000A40  5006               	movf	___awmod@sign^0,w,c
   657  000A42  B4D8               	btfsc	status,2,c
   658  000A44  EF26  F005         	goto	u301
   659  000A48  EF28  F005         	goto	u300
   660  000A4C                     u301:
   661  000A4C  EF2C  F005         	goto	l1056
   662  000A50                     u300:
   663  000A50  6C01               	negf	___awmod@dividend^0,c
   664  000A52  1E02               	comf	(___awmod@dividend+1)^0,f,c
   665  000A54  B0D8               	btfsc	status,0,c
   666  000A56  2A02               	incf	(___awmod@dividend+1)^0,f,c
   667  000A58                     l1056:
   668  000A58  C001  F001         	movff	___awmod@dividend,?___awmod
   669  000A5C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   670  000A60  0012               	return		;funcret
   671  000A62                     __end_of___awmod:
   672                           	opt callstack 0
   673                           
   674 ;; *************** function _StringLCD *****************
   675 ;; Defined at:
   676 ;;		line 104 in file "./lcd_4vias.h"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  string          2    3[COMRAM] PTR const unsigned char 
   679 ;;		 -> STR_2(17), STR_1(17), 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   691 ;;      Params:         2       0       0       0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    1
   698 ;; This function calls:
   699 ;;		_EscreveLCD
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text2
   706  000C18                     __ptext2:
   707                           	opt callstack 0
   708  000C18                     _StringLCD:
   709                           	opt callstack 29
   710  000C18                     
   711                           ;./lcd_4vias.h: 104: void StringLCD (const unsigned char *string);./lcd_4vias.h: 105: {;
      +                          ./lcd_4vias.h: 106:     while (*string != 0)
   712  000C18  EF18  F006         	goto	l1002
   713  000C1C                     l998:
   714                           
   715                           ;./lcd_4vias.h: 107:     {;./lcd_4vias.h: 108:         EscreveLCD (*string);
   716  000C1C  C004  FFF6         	movff	StringLCD@string,tblptrl
   717  000C20  C005  FFF7         	movff	StringLCD@string+1,tblptrh
   718  000C24                     	if	0	;tblptru may be non-zero
   719  000C24                     	endif
   720  000C24                     	if	0	;tblptru may be non-zero
   721  000C24                     	endif
   722  000C24  0008               	tblrd		*
   723  000C26  50F5               	movf	tablat,w,c
   724  000C28  ECB3  F005         	call	_EscreveLCD
   725  000C2C                     
   726                           ;./lcd_4vias.h: 109:         string++;
   727  000C2C  4A04               	infsnz	StringLCD@string^0,f,c
   728  000C2E  2A05               	incf	(StringLCD@string+1)^0,f,c
   729  000C30                     l1002:
   730                           
   731                           ;./lcd_4vias.h: 106:     while (*string != 0)
   732  000C30  C004  FFF6         	movff	StringLCD@string,tblptrl
   733  000C34  C005  FFF7         	movff	StringLCD@string+1,tblptrh
   734  000C38                     	if	0	;tblptru may be non-zero
   735  000C38                     	endif
   736  000C38                     	if	0	;tblptru may be non-zero
   737  000C38                     	endif
   738  000C38  0008               	tblrd		*
   739  000C3A  50F5               	movf	tablat,w,c
   740  000C3C  0900               	iorlw	0
   741  000C3E  A4D8               	btfss	status,2,c
   742  000C40  EF24  F006         	goto	u241
   743  000C44  EF26  F006         	goto	u240
   744  000C48                     u241:
   745  000C48  EF0E  F006         	goto	l998
   746  000C4C                     u240:
   747  000C4C  0012               	return		;funcret
   748  000C4E                     __end_of_StringLCD:
   749                           	opt callstack 0
   750                           
   751 ;; *************** function _EscreveLCD *****************
   752 ;; Defined at:
   753 ;;		line 80 in file "./lcd_4vias.h"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  dado            1    wreg     unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  dado            1    1[COMRAM] unsigned char 
   758 ;;  i               1    2[COMRAM] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         0       0       0       0       0       0       0       0       0
   769 ;;      Locals:         2       0       0       0       0       0       0       0       0
   770 ;;      Temps:          1       0       0       0       0       0       0       0       0
   771 ;;      Totals:         3       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_StringLCD
   778 ;;		_main
   779 ;;		_NumeroLCD
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text3
   784  000B66                     __ptext3:
   785                           	opt callstack 0
   786  000B66                     _EscreveLCD:
   787                           	opt callstack 29
   788                           
   789                           ;incstack = 0
   790                           ;EscreveLCD@dado stored from wreg
   791  000B66  6E02               	movwf	EscreveLCD@dado^0,c
   792  000B68                     
   793                           ;./lcd_4vias.h: 80: void EscreveLCD (unsigned char dado);./lcd_4vias.h: 81: {;./lcd_4via
      +                          s.h: 82:     unsigned char i;;./lcd_4vias.h: 84:     for (i = 0; i < 2; i++)
   794  000B68  0E00               	movlw	0
   795  000B6A  6E03               	movwf	EscreveLCD@i^0,c
   796  000B6C                     l806:
   797                           
   798                           ;./lcd_4vias.h: 85:     {;./lcd_4vias.h: 86:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
   799  000B6C  5003               	movf	EscreveLCD@i^0,w,c
   800  000B6E  B4D8               	btfsc	status,2,c
   801  000B70  EFBC  F005         	goto	u51
   802  000B74  EFBE  F005         	goto	u50
   803  000B78                     u51:
   804  000B78  EFC9  F005         	goto	l810
   805  000B7C                     u50:
   806  000B7C  C002  F001         	movff	EscreveLCD@dado,??_EscreveLCD
   807  000B80  3A01               	swapf	??_EscreveLCD^0,f,c
   808  000B82  0EF0               	movlw	240
   809  000B84  1601               	andwf	??_EscreveLCD^0,f,c
   810  000B86  5081               	movf	129,w,c	;volatile
   811  000B88  0B0F               	andlw	15
   812  000B8A  1001               	iorwf	??_EscreveLCD^0,w,c
   813  000B8C  6E81               	movwf	129,c	;volatile
   814  000B8E  EFCD  F005         	goto	l812
   815  000B92                     l810:
   816  000B92  5081               	movf	129,w,c	;volatile
   817  000B94  0B0F               	andlw	15
   818  000B96  1002               	iorwf	EscreveLCD@dado^0,w,c
   819  000B98  6E81               	movwf	129,c	;volatile
   820  000B9A                     l812:
   821                           
   822                           ;./lcd_4vias.h: 89:         PORTBbits.RB2 = 1;
   823  000B9A  8481               	bsf	129,2,c	;volatile
   824  000B9C                     
   825                           ;./lcd_4vias.h: 90:         PORTBbits.RB3 = 1;
   826  000B9C  8681               	bsf	129,3,c	;volatile
   827  000B9E                     
   828                           ;./lcd_4vias.h: 91:         _delay((unsigned long)((50)*(4000000/4000000.0)));
   829  000B9E  0E10               	movlw	16
   830  000BA0                     u357:
   831  000BA0  2EE8               	decfsz	wreg,f,c
   832  000BA2  D7FE               	bra	u357
   833  000BA4  D000               	nop2	
   834  000BA6                     
   835                           ;./lcd_4vias.h: 93:         PORTBbits.RB3 = 0;
   836  000BA6  9681               	bcf	129,3,c	;volatile
   837                           
   838                           ;./lcd_4vias.h: 94:     }
   839  000BA8  2A03               	incf	EscreveLCD@i^0,f,c
   840  000BAA  0E01               	movlw	1
   841  000BAC  6403               	cpfsgt	EscreveLCD@i^0,c
   842  000BAE  EFDB  F005         	goto	u61
   843  000BB2  EFDD  F005         	goto	u60
   844  000BB6                     u61:
   845  000BB6  EFB6  F005         	goto	l806
   846  000BBA                     u60:
   847  000BBA                     
   848                           ;./lcd_4vias.h: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   849  000BBA  0E10               	movlw	16
   850  000BBC                     u367:
   851  000BBC  2EE8               	decfsz	wreg,f,c
   852  000BBE  D7FE               	bra	u367
   853  000BC0  D000               	nop2	
   854  000BC2  0012               	return		;funcret
   855  000BC4                     __end_of_EscreveLCD:
   856                           	opt callstack 0
   857                           
   858 ;; *************** function _PosicionaLCD *****************
   859 ;; Defined at:
   860 ;;		line 153 in file "./lcd_4vias.h"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  linha           1    wreg     unsigned char 
   863 ;;  coluna          1    3[COMRAM] unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  linha           1    6[COMRAM] unsigned char 
   866 ;;  posicao         1    7[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         1       0       0       0       0       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0
   879 ;;      Totals:         5       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        5 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    1
   883 ;; This function calls:
   884 ;;		_ComandoLCD
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text4
   891  000AF4                     __ptext4:
   892                           	opt callstack 0
   893  000AF4                     _PosicionaLCD:
   894                           	opt callstack 29
   895                           
   896                           ;incstack = 0
   897                           ;PosicionaLCD@linha stored from wreg
   898  000AF4  6E07               	movwf	PosicionaLCD@linha^0,c
   899  000AF6                     
   900                           ;./lcd_4vias.h: 153: void PosicionaLCD (unsigned char linha, unsigned char coluna);./lcd
      +                          _4vias.h: 154: {;./lcd_4vias.h: 155:     unsigned char posicao;;./lcd_4vias.h: 156:     
      +                          coluna--;
   901  000AF6  0604               	decf	PosicionaLCD@coluna^0,f,c
   902                           
   903                           ;./lcd_4vias.h: 158:     switch (linha)
   904  000AF8  EF92  F005         	goto	l1016
   905  000AFC                     l1006:
   906  000AFC  5004               	movf	PosicionaLCD@coluna^0,w,c
   907  000AFE  0F80               	addlw	128
   908  000B00  6E08               	movwf	PosicionaLCD@posicao^0,c
   909  000B02  EFAF  F005         	goto	l1018
   910  000B06                     l1008:
   911  000B06  5004               	movf	PosicionaLCD@coluna^0,w,c
   912  000B08  0FC0               	addlw	192
   913  000B0A  6E08               	movwf	PosicionaLCD@posicao^0,c
   914  000B0C  EFAF  F005         	goto	l1018
   915  000B10                     l1010:
   916  000B10  5004               	movf	PosicionaLCD@coluna^0,w,c
   917  000B12  0F94               	addlw	148
   918  000B14  6E08               	movwf	PosicionaLCD@posicao^0,c
   919  000B16  EFAF  F005         	goto	l1018
   920  000B1A                     l1012:
   921  000B1A  5004               	movf	PosicionaLCD@coluna^0,w,c
   922  000B1C  0FD4               	addlw	212
   923  000B1E  6E08               	movwf	PosicionaLCD@posicao^0,c
   924  000B20  EFAF  F005         	goto	l1018
   925  000B24                     l1016:
   926  000B24  5007               	movf	PosicionaLCD@linha^0,w,c
   927  000B26  6E05               	movwf	??_PosicionaLCD^0,c
   928  000B28  6A06               	clrf	(??_PosicionaLCD+1)^0,c
   929                           
   930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   931                           ; Switch size 1, requested type "simple"
   932                           ; Number of cases is 1, Range of values is 0 to 0
   933                           ; switch strategies available:
   934                           ; Name         Instructions Cycles
   935                           ; simple_byte            4     3 (average)
   936                           ;	Chosen strategy is simple_byte
   937  000B2A  5006               	movf	(??_PosicionaLCD+1)^0,w,c
   938  000B2C  0A00               	xorlw	0	; case 0
   939  000B2E  B4D8               	btfsc	status,2,c
   940  000B30  EF9C  F005         	goto	l1120
   941  000B34  EFAF  F005         	goto	l1018
   942  000B38                     l1120:
   943                           
   944                           ; Switch size 1, requested type "simple"
   945                           ; Number of cases is 4, Range of values is 1 to 4
   946                           ; switch strategies available:
   947                           ; Name         Instructions Cycles
   948                           ; simple_byte           13     7 (average)
   949                           ;	Chosen strategy is simple_byte
   950  000B38  5005               	movf	??_PosicionaLCD^0,w,c
   951  000B3A  0A01               	xorlw	1	; case 1
   952  000B3C  B4D8               	btfsc	status,2,c
   953  000B3E  EF7E  F005         	goto	l1006
   954  000B42  0A03               	xorlw	3	; case 2
   955  000B44  B4D8               	btfsc	status,2,c
   956  000B46  EF83  F005         	goto	l1008
   957  000B4A  0A01               	xorlw	1	; case 3
   958  000B4C  B4D8               	btfsc	status,2,c
   959  000B4E  EF88  F005         	goto	l1010
   960  000B52  0A07               	xorlw	7	; case 4
   961  000B54  B4D8               	btfsc	status,2,c
   962  000B56  EF8D  F005         	goto	l1012
   963  000B5A  EFAF  F005         	goto	l1018
   964  000B5E                     l1018:
   965                           
   966                           ;./lcd_4vias.h: 166:     ComandoLCD (posicao);
   967  000B5E  5008               	movf	PosicionaLCD@posicao^0,w,c
   968  000B60  EC31  F005         	call	_ComandoLCD
   969  000B64  0012               	return		;funcret
   970  000B66                     __end_of_PosicionaLCD:
   971                           	opt callstack 0
   972                           
   973 ;; *************** function _IniciaLCD *****************
   974 ;; Defined at:
   975 ;;		line 38 in file "./lcd_4vias.h"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  inicio          6    4[COMRAM] unsigned char [6]
   980 ;;  i               1   10[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0       0       0       0       0       0       0       0       0
   991 ;;      Locals:         7       0       0       0       0       0       0       0       0
   992 ;;      Temps:          1       0       0       0       0       0       0       0       0
   993 ;;      Totals:         8       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    1
   997 ;; This function calls:
   998 ;;		_ComandoLCD
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text5
  1005  000BC4                     __ptext5:
  1006                           	opt callstack 0
  1007  000BC4                     _IniciaLCD:
  1008                           	opt callstack 29
  1009  000BC4                     
  1010                           ;./lcd_4vias.h: 40:     unsigned char i;;./lcd_4vias.h: 41:     unsigned char inicio[6] 
      +                          = {0x33, 0x32, 0x28, 0x0C, 0x06, 0x01};
  1011  000BC4  EE20  F00E         	lfsr	2,IniciaLCD@F3175
  1012  000BC8  EE10  F005         	lfsr	1,IniciaLCD@inicio
  1013  000BCC  0E05               	movlw	5
  1014  000BCE                     u71:
  1015  000BCE  CFDB FFE3          	movff	plusw2,plusw1
  1016  000BD2  06E8               	decf	wreg,f,c
  1017  000BD4  E2FC               	bc	u71
  1018  000BD6                     
  1019                           ;./lcd_4vias.h: 43:     PORTB = PORTB & 0B00001111;
  1020  000BD6  5081               	movf	129,w,c	;volatile
  1021  000BD8  0B0F               	andlw	15
  1022  000BDA  6E81               	movwf	129,c	;volatile
  1023  000BDC                     
  1024                           ;./lcd_4vias.h: 44:     PORTBbits.RB2 = 0;
  1025  000BDC  9481               	bcf	129,2,c	;volatile
  1026  000BDE                     
  1027                           ;./lcd_4vias.h: 45:     PORTBbits.RB3 = 0;
  1028  000BDE  9681               	bcf	129,3,c	;volatile
  1029  000BE0                     
  1030                           ;./lcd_4vias.h: 47:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1031  000BE0  0E14               	movlw	20
  1032  000BE2  6E04               	movwf	??_IniciaLCD^0,c
  1033  000BE4  0E7A               	movlw	122
  1034  000BE6                     u377:
  1035  000BE6  2EE8               	decfsz	wreg,f,c
  1036  000BE8  D7FE               	bra	u377
  1037  000BEA  2E04               	decfsz	??_IniciaLCD^0,f,c
  1038  000BEC  D7FC               	bra	u377
  1039  000BEE                     
  1040                           ;./lcd_4vias.h: 50:     for (i = 0; i < 6; i++) ComandoLCD (inicio[i]);
  1041  000BEE  0E00               	movlw	0
  1042  000BF0  6E0B               	movwf	IniciaLCD@i^0,c
  1043  000BF2                     l840:
  1044  000BF2  0E05               	movlw	low IniciaLCD@inicio
  1045  000BF4  240B               	addwf	IniciaLCD@i^0,w,c
  1046  000BF6  6ED9               	movwf	fsr2l,c
  1047  000BF8  6ADA               	clrf	fsr2h,c
  1048  000BFA  0E00               	movlw	high IniciaLCD@inicio
  1049  000BFC  22DA               	addwfc	fsr2h,f,c
  1050  000BFE  50DF               	movf	indf2,w,c
  1051  000C00  EC31  F005         	call	_ComandoLCD
  1052  000C04  2A0B               	incf	IniciaLCD@i^0,f,c
  1053  000C06  0E05               	movlw	5
  1054  000C08  640B               	cpfsgt	IniciaLCD@i^0,c
  1055  000C0A  EF09  F006         	goto	u81
  1056  000C0E  EF0B  F006         	goto	u80
  1057  000C12                     u81:
  1058  000C12  EFF9  F005         	goto	l840
  1059  000C16                     u80:
  1060  000C16  0012               	return		;funcret
  1061  000C18                     __end_of_IniciaLCD:
  1062                           	opt callstack 0
  1063                           
  1064 ;; *************** function _ComandoLCD *****************
  1065 ;; Defined at:
  1066 ;;		line 56 in file "./lcd_4vias.h"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  dado            1    wreg     unsigned char 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  dado            1    2[COMRAM] unsigned char 
  1071 ;;  i               1    1[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        3 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_IniciaLCD
  1091 ;;		_PosicionaLCD
  1092 ;;		_LimpaLCD
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text6
  1097  000A62                     __ptext6:
  1098                           	opt callstack 0
  1099  000A62                     _ComandoLCD:
  1100                           	opt callstack 29
  1101                           
  1102                           ;incstack = 0
  1103                           ;ComandoLCD@dado stored from wreg
  1104  000A62  6E03               	movwf	ComandoLCD@dado^0,c
  1105  000A64                     
  1106                           ;./lcd_4vias.h: 56: void ComandoLCD (unsigned char dado);./lcd_4vias.h: 57: {;./lcd_4via
      +                          s.h: 58:     unsigned char i;;./lcd_4vias.h: 60:     for (i = 0; i < 2; i++)
  1107  000A64  0E00               	movlw	0
  1108  000A66  6E02               	movwf	ComandoLCD@i^0,c
  1109  000A68                     l776:
  1110                           
  1111                           ;./lcd_4vias.h: 61:     {;./lcd_4vias.h: 62:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
  1112  000A68  5002               	movf	ComandoLCD@i^0,w,c
  1113  000A6A  B4D8               	btfsc	status,2,c
  1114  000A6C  EF3A  F005         	goto	u11
  1115  000A70  EF3C  F005         	goto	u10
  1116  000A74                     u11:
  1117  000A74  EF47  F005         	goto	l780
  1118  000A78                     u10:
  1119  000A78  C003  F001         	movff	ComandoLCD@dado,??_ComandoLCD
  1120  000A7C  3A01               	swapf	??_ComandoLCD^0,f,c
  1121  000A7E  0EF0               	movlw	240
  1122  000A80  1601               	andwf	??_ComandoLCD^0,f,c
  1123  000A82  5081               	movf	129,w,c	;volatile
  1124  000A84  0B0F               	andlw	15
  1125  000A86  1001               	iorwf	??_ComandoLCD^0,w,c
  1126  000A88  6E81               	movwf	129,c	;volatile
  1127  000A8A  EF4B  F005         	goto	l782
  1128  000A8E                     l780:
  1129  000A8E  5081               	movf	129,w,c	;volatile
  1130  000A90  0B0F               	andlw	15
  1131  000A92  1003               	iorwf	ComandoLCD@dado^0,w,c
  1132  000A94  6E81               	movwf	129,c	;volatile
  1133  000A96                     l782:
  1134                           
  1135                           ;./lcd_4vias.h: 65:         PORTBbits.RB2 = 0;
  1136  000A96  9481               	bcf	129,2,c	;volatile
  1137  000A98                     
  1138                           ;./lcd_4vias.h: 66:         PORTBbits.RB3 = 1;
  1139  000A98  8681               	bsf	129,3,c	;volatile
  1140  000A9A                     
  1141                           ;./lcd_4vias.h: 67:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1142  000A9A  0E10               	movlw	16
  1143  000A9C                     u387:
  1144  000A9C  2EE8               	decfsz	wreg,f,c
  1145  000A9E  D7FE               	bra	u387
  1146  000AA0  D000               	nop2	
  1147  000AA2                     
  1148                           ;./lcd_4vias.h: 69:         PORTBbits.RB3 = 0;
  1149  000AA2  9681               	bcf	129,3,c	;volatile
  1150                           
  1151                           ;./lcd_4vias.h: 70:     }
  1152  000AA4  2A02               	incf	ComandoLCD@i^0,f,c
  1153  000AA6  0E01               	movlw	1
  1154  000AA8  6402               	cpfsgt	ComandoLCD@i^0,c
  1155  000AAA  EF59  F005         	goto	u21
  1156  000AAE  EF5B  F005         	goto	u20
  1157  000AB2                     u21:
  1158  000AB2  EF34  F005         	goto	l776
  1159  000AB6                     u20:
  1160  000AB6                     
  1161                           ;./lcd_4vias.h: 72:     if ((dado == 0x01) || (dado == 0x02)) _delay((unsigned long)((2)
      +                          *(4000000/4000.0)));
  1162  000AB6  0403               	decf	ComandoLCD@dado^0,w,c
  1163  000AB8  B4D8               	btfsc	status,2,c
  1164  000ABA  EF61  F005         	goto	u31
  1165  000ABE  EF63  F005         	goto	u30
  1166  000AC2                     u31:
  1167  000AC2  EF6C  F005         	goto	l796
  1168  000AC6                     u30:
  1169  000AC6  0E02               	movlw	2
  1170  000AC8  1803               	xorwf	ComandoLCD@dado^0,w,c
  1171  000ACA  A4D8               	btfss	status,2,c
  1172  000ACC  EF6A  F005         	goto	u41
  1173  000AD0  EF6C  F005         	goto	u40
  1174  000AD4                     u41:
  1175  000AD4  EF75  F005         	goto	l798
  1176  000AD8                     u40:
  1177  000AD8                     l796:
  1178  000AD8  0E03               	movlw	3
  1179  000ADA  6E01               	movwf	??_ComandoLCD^0,c
  1180  000ADC  0E98               	movlw	152
  1181  000ADE                     u397:
  1182  000ADE  2EE8               	decfsz	wreg,f,c
  1183  000AE0  D7FE               	bra	u397
  1184  000AE2  2E01               	decfsz	??_ComandoLCD^0,f,c
  1185  000AE4  D7FC               	bra	u397
  1186  000AE6  EF79  F005         	goto	l42
  1187  000AEA                     l798:
  1188  000AEA  0E10               	movlw	16
  1189  000AEC                     u407:
  1190  000AEC  2EE8               	decfsz	wreg,f,c
  1191  000AEE  D7FE               	bra	u407
  1192  000AF0  D000               	nop2	
  1193  000AF2                     l42:
  1194  000AF2  0012               	return		;funcret
  1195  000AF4                     __end_of_ComandoLCD:
  1196                           	opt callstack 0
  1197                           
  1198                           	psect	rparam
  1199  0000                     tosu	equ	0xFFF
  1200                           tosh	equ	0xFFE
  1201                           tosl	equ	0xFFD
  1202                           stkptr	equ	0xFFC
  1203                           pclatu	equ	0xFFB
  1204                           pclath	equ	0xFFA
  1205                           pcl	equ	0xFF9
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           prodh	equ	0xFF4
  1211                           prodl	equ	0xFF3
  1212                           indf0	equ	0xFEF
  1213                           postinc0	equ	0xFEE
  1214                           postdec0	equ	0xFED
  1215                           preinc0	equ	0xFEC
  1216                           plusw0	equ	0xFEB
  1217                           fsr0h	equ	0xFEA
  1218                           fsr0l	equ	0xFE9
  1219                           wreg	equ	0xFE8
  1220                           indf1	equ	0xFE7
  1221                           postinc1	equ	0xFE6
  1222                           postdec1	equ	0xFE5
  1223                           preinc1	equ	0xFE4
  1224                           plusw1	equ	0xFE3
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           bsr	equ	0xFE0
  1228                           indf2	equ	0xFDF
  1229                           postinc2	equ	0xFDE
  1230                           postdec2	equ	0xFDD
  1231                           preinc2	equ	0xFDC
  1232                           plusw2	equ	0xFDB
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    StringLCD@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_IniciaLCD
    _StringLCD->_EscreveLCD
    _PosicionaLCD->_ComandoLCD
    _IniciaLCD->_ComandoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2114
                                             11 COMRAM     2     2      0
                         _EscreveLCD
                          _IniciaLCD
                       _PosicionaLCD
                          _StringLCD
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _StringLCD                                            2     0      2     272
                                              3 COMRAM     2     0      2
                         _EscreveLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveLCD                                           3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PosicionaLCD                                         5     4      1     698
                                              3 COMRAM     5     4      1
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (1) _IniciaLCD                                            8     8      0     165
                                              3 COMRAM     8     8      0
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           3     3      0     105
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EscreveLCD
   _IniciaLCD
     _ComandoLCD
   _PosicionaLCD
     _ComandoLCD
   _StringLCD
     _EscreveLCD
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      14       1       21.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 03 23:11:45 2020

                     l31 0C16                       l42 0AF2                       l71 0B64  
                     l55 0C4C                       l49 0BC2                       l90 0932  
                     l82 0974                       l83 086C                       l86 08AE  
                     l88 08F0                       u10 0A78                       u11 0A74  
                     u20 0AB6                       u21 0AB2                       u30 0AC6  
                     u31 0AC2                       u40 0AD8                       u41 0AD4  
                     u50 0B7C                       u51 0B78                       u60 0BBA  
                     u61 0BB6                       u71 0BCE                       u80 0C16  
                     u81 0C12              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l341 0A60               IniciaLCD@i 000B                      l800 0B68  
                    l810 0B92                      l820 0BAA                      l812 0B9A  
                    l830 0BDE                      l822 0BBA                      l814 0B9C  
                    l806 0B6C                      l840 0BF2                      l832 0BE0  
                    l824 0BC4                      l816 0B9E                      l808 0B7C  
                    l770 0A64                      l842 0C04                      l834 0BEE  
                    l826 0BD6                      l818 0BA6                      l780 0A8E  
                    l844 0C06                      l828 0BDC                      l790 0AA6  
                    l782 0A96                      l792 0AB6                      l784 0A98  
                    l776 0A68                      l794 0AC6                      l786 0A9A  
                    l778 0A78                      l796 0AD8                      l788 0AA2  
                    l798 0AEA                      l996 0C18                      l998 0C1C  
           __CFG_CPB$OFF 000000                      u300 0A50                      u301 0A4C  
                    u310 08A6                      u311 08A2                      u240 0C4C  
                    u320 08E8                      u241 0C48                      u321 08E4  
                    u250 09C4                      u330 092A                      u251 09C0  
                    u331 0926                      u260 09DE                      u340 096C  
                    u261 09DA                      u341 0968                      u270 09F8  
                    u407 0AEC                      u271 09F4                      u280 0A16  
                    u281 0A12                      u290 0A2C             __CFG_CPD$OFF 000000  
                    u291 0A28                      u357 0BA0                      u367 0BBC  
                    u377 0BE6                      u387 0A9C                      u397 0ADE  
           __CFG_BOR$OFF 000000             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_FOSC$HS 000000              EscreveLCD@i 0003             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1000 0C2C                     l1010 0B10  
                   l1002 0C30                     l1012 0B1A                     l1004 0AF6  
                   l1100 096C                     l1006 0AFC                     l1030 09CC  
                   l1120 0B38                     l1008 0B06                     l1016 0B24  
                   l1040 0A00                     l1032 09D0                     l1024 09B2  
                   l1104 0974                     l1018 0B5E                     l1050 0A3A  
                   l1042 0A08                     l1034 09DE                     l1026 09B6  
                   l1044 0A16                     l1052 0A40                     l1036 09E6  
                   l1028 09C4                     l1060 0824                     l1054 0A50  
                   l1046 0A2C                     l1038 09F8                     l1118 0988  
                   l1070 083C                     l1062 082C                     l1056 0A58  
                   l1048 0A34                     l1080 0898                     l1072 0846  
                   l1064 0832                     l1090 08F8                     l1082 08A6  
                   l1074 0852                     l1066 0834                     l1092 091C  
                   l1084 08B6                     l1076 085C                     l1068 0838  
                   l1094 092A                     l1086 08DA                     l1078 0874  
                   l1096 093A                     l1088 08E8                     l1098 095E  
                   STR_1 0812                     STR_2 0801                     _UCON 000F6D  
           __CFG_WDTPS$1 000000             __CFG_PWRT$ON 000000                     _main 0824  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001          __end_of___awmod 0A62               _ComandoLCD 0A62  
                  _PORTB 000F81                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
             _EscreveLCD 0B66                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 0C4E  
           __end_of_main 09B2                   ??_main 000C            __activetblptr 000002  
     __size_of_IniciaLCD 0054                   _Estado 0014           __CFG_XINST$OFF 000000  
              ??___awmod 0005          ___awmod@divisor 0003          ___awmod@counter 0005  
            ?_ComandoLCD 0001             __pdataCOMRAM 000E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
     __size_of_StringLCD 0036              ?_EscreveLCD 0001               __accesstop 0060  
__end_of__initialization 0C6E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001           EscreveLCD@dado 0002        __end_of_IniciaLCD 0C18  
    __size_of_ComandoLCD 0092           IniciaLCD@F3175 000E           ComandoLCD@dado 0003  
      __end_of_StringLCD 0C4E      __size_of_EscreveLCD 005E          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000            ?_PosicionaLCD 0004  
                ___awmod 09B2             __psmallconst 0800                  __pcinit 0C4E  
                __ramtop 0800                  __ptext0 0824                  __ptext1 09B2  
                __ptext2 0C18                  __ptext3 0B66                  __ptext4 0AF4  
                __ptext5 0BC4                  __ptext6 0A62         ___awmod@dividend 0001  
   end_of_initialization 0C6E            __Lmediumconst 0000           ??_PosicionaLCD 0005  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
              _PORTCbits 000F82             ??_ComandoLCD 0001                _PORTDbits 000F83  
              _TRISCbits 000F94             ??_EscreveLCD 0001       __end_of_ComandoLCD 0AF4  
          __pidataCOMRAM 0C78       __end_of_EscreveLCD 0BC4                _IniciaLCD 0BC4  
    start_initialization 0C4E         __CFG_LPT1OSC$OFF 000000               ?_IniciaLCD 0001  
              _StringLCD 0C18     __end_of_PosicionaLCD 0B66      PosicionaLCD@posicao 0008  
        StringLCD@string 0004                 ?___awmod 0001              __smallconst 0800  
             ?_StringLCD 0004          IniciaLCD@inicio 0005                 _UCFGbits 000F6F  
            ??_IniciaLCD 0004                copy_data0 0C62                 __Hrparam 0000  
               __Lrparam 0000       PosicionaLCD@coluna 0004         __size_of___awmod 00B0  
  __size_of_PosicionaLCD 0072              ??_StringLCD 0006            __size_of_main 018E  
           _PosicionaLCD 0AF4    __CFG_CPUDIV$OSC1_PLL2 000000        PosicionaLCD@linha 0007  
            ComandoLCD@i 0002  
